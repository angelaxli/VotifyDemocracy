To dynamically retrieve and use the correct electionId for a given address using the Google Civic Information API, you’ll follow a two-step process: first, fetch the list of upcoming elections; then, determine which of those elections are relevant to the user’s specific address. This allows you to make an informed call to the voterinfo endpoint and return personalized election data, such as polling locations, early voting sites, and election officials.

Begin by sending a GET request to the https://www.googleapis.com/civicinfo/v2/elections endpoint using your API key. This will return a JSON response with a list of all upcoming U.S. elections, including their names, IDs, and dates. Each election has a unique electionId, which is required for querying voter-specific details in the next step. Once you have this list, your goal is to determine which of these elections apply to the user’s provided address.

To do that, iterate through each electionId from the elections response and make a corresponding GET request to the voterinfo endpoint. For each election, the URL should look like this: https://www.googleapis.com/civicinfo/v2/voterinfo?address=USER_ADDRESS&electionId=ELECTION_ID&key=YOUR_API_KEY. Replace USER_ADDRESS with the user’s full address (URL-encoded), and use the current electionId in the loop. Each call will return information specific to that address and election, such as polling location details or early voting availability.

After each request, examine the response to determine if it includes valid data. If the response contains a pollingLocations, contests, or electionAdministrationBody field, then the electionId is relevant to the user’s location. The first electionId that returns valid, non-empty information can then be used as the target election for your app. From here, you can use that confirmed election ID to fetch all the relevant election information and present it to the user in a clear and accessible way.

By automating this lookup and validation process in code, your app will be able to dynamically identify which elections matter to a user based on their address, without hardcoding election IDs or relying on assumptions. This also ensures that your platform scales across different states and counties while maintaining accuracy and personalized civic access.